//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Model")]
    public partial class Photo : object
    {
        
        private System.DateTime CreationDateField;
        
        private MyPhotosServiceReference.Event[] EventsField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private MyPhotosServiceReference.Landscape[] LandscapesField;
        
        private string NameField;
        
        private string PathField;
        
        private MyPhotosServiceReference.Person[] PersonsField;
        
        private MyPhotosServiceReference.Place[] PlacesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Event[] Events
        {
            get
            {
                return this.EventsField;
            }
            set
            {
                this.EventsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return this.IsDeletedField;
            }
            set
            {
                this.IsDeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Landscape[] Landscapes
        {
            get
            {
                return this.LandscapesField;
            }
            set
            {
                this.LandscapesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Person[] Persons
        {
            get
            {
                return this.PersonsField;
            }
            set
            {
                this.PersonsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Place[] Places
        {
            get
            {
                return this.PlacesField;
            }
            set
            {
                this.PlacesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Model")]
    public partial class Event : object
    {
        
        private System.Nullable<System.DateTime> DateField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private MyPhotosServiceReference.Photo[] PhotosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Landscape", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Model")]
    public partial class Landscape : object
    {
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private MyPhotosServiceReference.Photo[] PhotosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Model")]
    public partial class Person : object
    {
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private MyPhotosServiceReference.Photo[] PhotosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Model")]
    public partial class Place : object
    {
        
        private string AddressField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private MyPhotosServiceReference.Photo[] PhotosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosServiceReference.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyPhotosServiceReference.IPhotoController")]
    public interface IPhotoController
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/AddOrUpdatePhoto", ReplyAction="http://tempuri.org/IPhotoController/AddOrUpdatePhotoResponse")]
        System.Threading.Tasks.Task AddOrUpdatePhotoAsync(MyPhotosServiceReference.Photo photoToAddOrUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/SearchPhotoByText", ReplyAction="http://tempuri.org/IPhotoController/SearchPhotoByTextResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Photo[]> SearchPhotoByTextAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/DeletePhoto", ReplyAction="http://tempuri.org/IPhotoController/DeletePhotoResponse")]
        System.Threading.Tasks.Task DeletePhotoAsync(MyPhotosServiceReference.Photo photoToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/GetAllPhotos", ReplyAction="http://tempuri.org/IPhotoController/GetAllPhotosResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Photo[]> GetAllPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/GetAllPersons", ReplyAction="http://tempuri.org/IPhotoController/GetAllPersonsResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Person[]> GetAllPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/GetAllEvents", ReplyAction="http://tempuri.org/IPhotoController/GetAllEventsResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Event[]> GetAllEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/GetAllLandscapes", ReplyAction="http://tempuri.org/IPhotoController/GetAllLandscapesResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Landscape[]> GetAllLandscapesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoController/GetAllPlaces", ReplyAction="http://tempuri.org/IPhotoController/GetAllPlacesResponse")]
        System.Threading.Tasks.Task<MyPhotosServiceReference.Place[]> GetAllPlacesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IPhotoControllerChannel : MyPhotosServiceReference.IPhotoController, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PhotoControllerClient : System.ServiceModel.ClientBase<MyPhotosServiceReference.IPhotoController>, MyPhotosServiceReference.IPhotoController
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PhotoControllerClient() : 
                base(PhotoControllerClient.GetDefaultBinding(), PhotoControllerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPhoto.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoControllerClient(EndpointConfiguration endpointConfiguration) : 
                base(PhotoControllerClient.GetBindingForEndpoint(endpointConfiguration), PhotoControllerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoControllerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PhotoControllerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoControllerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PhotoControllerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddOrUpdatePhotoAsync(MyPhotosServiceReference.Photo photoToAddOrUpdate)
        {
            return base.Channel.AddOrUpdatePhotoAsync(photoToAddOrUpdate);
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Photo[]> SearchPhotoByTextAsync(string text)
        {
            return base.Channel.SearchPhotoByTextAsync(text);
        }
        
        public System.Threading.Tasks.Task DeletePhotoAsync(MyPhotosServiceReference.Photo photoToDelete)
        {
            return base.Channel.DeletePhotoAsync(photoToDelete);
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Photo[]> GetAllPhotosAsync()
        {
            return base.Channel.GetAllPhotosAsync();
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Person[]> GetAllPersonsAsync()
        {
            return base.Channel.GetAllPersonsAsync();
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Event[]> GetAllEventsAsync()
        {
            return base.Channel.GetAllEventsAsync();
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Landscape[]> GetAllLandscapesAsync()
        {
            return base.Channel.GetAllLandscapesAsync();
        }
        
        public System.Threading.Tasks.Task<MyPhotosServiceReference.Place[]> GetAllPlacesAsync()
        {
            return base.Channel.GetAllPlacesAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhoto))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhoto))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PhotoControllerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPhoto);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PhotoControllerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPhoto);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPhoto,
        }
    }
}
